The RAISE statement explicitly raises an exception.

Outside an exception handler, you must specify the exception name. Inside an exception handler, if you omit the exception name, the RAISE statement reraises 
the current exception.

The RAISE statement stops normal execution of a PL/SQL block or subprogram and transfers control to an exception handler.

RAISE statements can raise predefined exceptions, such as ZERO_DIVIDE or NO_DATA_FOUND, or user-defined exceptions whose names you decide.

Example:
DECLARE
   out_of_stock EXCEPTION;
   quantity_on_hand NUMBER := 0;
   denominator NUMBER := 0;
BEGIN
   IF quantity_on_hand = 0 THEN
      RAISE out_of_stock;
   END IF;

   IF denominator = 0 THEN
      raise ZERO_DIVIDE;
   END IF;

   EXCEPTION
      WHEN out_of_stock THEN
         dbms_output.put_line('No more parts in stock.');
      WHEN ZERO_DIVIDE THEN
         dbms_output.put_line('Attempt to divide by zero.');
      WHEN OTHERS THEN
         dbms_output.put_line('Some other kind of problem...');
END;
/
